<pre>
  BIP:     BIP-0040
  Title:   Stratum Mining Initiation Protocol (S-MIP)
  Authors: Marek Palatinus <slush@satoshilabs.com>
           Jan Capek <jan.capek@braiins.cz>
           Pavel Moravec <pavel.moravec@braiins.cz>
  Status:  Draft
  Type:    Standards Track
  Created: 2015-12-03
</pre>

==Abstract==

This BIP describes the Stratum Mining Initiation Protocol that is intended to strengthen global mining infrastructure by making it more robust and resistant against DDoS attacks.

This document proposes a standard for initiating a mining session with a pool in a way that allows only authenticated user/miner to proceed and leaves any malicious traffic outside. 

The implementation relies on the fact that it is possible to completely close firewall on the edge of the mining infrastructure (ideally on the edge routers) and let only authenticated traffic in. At the same time, the authentication is accomplished by communicating via a standard HTTP protocol. There are HTTP providers that are able to withstand almost any size of DDoS attack.


==Motivation==

Recent attacks targeting mining pools have shown that protecting mining infrastructure against DDoS attacks is a difficult and rather expensive task. Since mining pools are crucial part of the entire Bitcoin ecosystem, it is worth implementing a mining session initiation protocol that renders DDoS attacks inefficient.


==Specification==

=== MIP Message Format ===

All messages are HTTP POST requests with JSON payload. Content-Type *MUST BE*
 **application/json**.


==== Mining Initiation Message ====

- **api_key**: API Key/Login name
- **password**: (optional password)
- **accepted_protocols**: List of supported mining protocols on client side ('stratum+tcp', 'stratum2+tcp', 'gbt', etc.). The protocols are sorted by preference - higher priority protocols come first.


==== Mining Initiation Response =====

The server should always respond within 30 seconds.


===== Status Code: 200 OK =====

MIP Server provides:
- **protocol**: Mining protocol (e.g.: 'stratum+tcp')
- **host**: Mining host (e.g.: 'eu.stratum.slushpool.com'
- **port**: Mining port (e.g.: 3333)
- **server_time**: Current time of the server (UTC seconds since Unix epoch)
- **expiration**: The miner has to open its mining session at the specified host within this timeout (seconds) since **server_time**.


===== Status Code: 403 Forbidden =====

The connecting client has provided invalid API Key, invalid login
credentials, or none of the requested mining protocols is supported by
the mining provider.

- **msg**: Message with explanation


===== Status Code: 307 Temporary Redirect =====

The temporary redirect means that the server is either still processing the request or needs to redirect the miner to a more suitable destination endpoint. The miner (client) should follow the provided redirect URL with the same payload as the **Mining Initiation Message**.


=== Variant 1 (NAT traversal using simultaneous TCP open) ===



- CLIENT->STUN: determine NAT type using a public STUN server (currently most are
  UDP only, but it should still allow determining the NAT type)

- CLIENT->WEBSERVER: submit public IP, expected source port and NAT
  type via web API. Each client is authenticated with an API key

- WEBSERVER->STRATUM PROXY: tell stratum proxy about mining session initiation (destination IP, destination port)

- STRATUM PROXY->CLIENT: start connection attempts to client 

- CLIENT->STRATUM PROXY: start connection attempts to the proxy using preselected source port, so that firewall/NAT piercing may succeed

- (connection successful): regular stratum protocol follows and stratum proxy forwards the connection to the actual stratum server providing mining jobs.


=== Variant 2 (UPnP portforwarding setup - assumes public IP of miner's router)

This variant can also be named "Let us know your connection details,
we will call you back".

- CLIENT->STUN: determine public IP using an arbitrary public STUN
  server or similar service

- CLIENT->LOCAL INTERNET ROUTER: use UPnP to enable port forwarding of a selected port

- CLIENT->WEBSERVER: submit public IP, source port that is being port
  forwarded on the router. Client authenticates with an API key
  towards the webserver.

- CLIENT: start listening for incoming connections on the forwarded port

- WEBSERVER->STRATUM PROXY: tell stratum proxy about mining session initiation (destination IP, destination port)

- STRATUM PROXY->CLIENT: start connection attempts to client

- (connection successful): see variant 1



==Reference Implementation==

Reference implementation is available from

http://github.com/slush0/stratum/

Stratum mining proxy implementing Stratum MIP (BIP40)
and Stratum binary (BIP41) is available from

http://github.com/slush0/stratum-mining-proxy/
